version: '3.9'
services:
  gateway_service:
    container_name: gateway_service
    build:
      context: .
      dockerfile: Docker/gateway.Dockerfile
    networks:
      - game_server
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      TZ: "Asia/Bangkok"
    ports:
      - "8001:8001"
  auth_service:
    container_name: auth_service
    build:
      context: .
      dockerfile: Docker/auth.Dockerfile
    networks:
      - game_server
    depends_on:
      gateway_service:
        condition: service_started
      database:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      TZ: "Asia/Bangkok"
    ports:
      - "5003:5003"
  database:
    container_name: postgres_game_db
    image: postgres:14-alpine
    networks:
      - game_server
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./init_db_script/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      TZ: "Asia/Bangkok"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "2iNyADya#bUu9"
      POSTGRES_DB: "root"
  database_admin:
    container_name: postgres_game_admin
    image: dpage/pgadmin4:6
    ports:
      - "9000:80"
    networks:
      - game_server
    depends_on:
      - database
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@kmitl.ac.th"
      PGADMIN_DEFAULT_PASSWORD: "s8KHf^fLFWHppKtUJf7VtTE"
  zookeeper:
    image: zookeeper:3.8.0
    container_name: zookeeper
    networks:
      - game_server
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/datalog:/datalog
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    networks:
      - game_server
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      ALLOW_PLAINTEXT_LISTENER: yes
      JMX_PORT: 9997
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.rmi.port=9997"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 10s
      timeout: 10s
      retries: 5
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - game_server
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./redis/data:/data
      - ./redis/config/redis.conf:/redis.conf
    command: redis-server /redis.conf
  nginx:
    image: jc21/nginx-proxy-manager
    container_name: nginx
    restart: unless-stopped
    ports:
      - '8080:80'
      - '8081:81'
      - '8443:443'
    networks:
      - game_server
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt

networks:
  game_server:
    name: game_server