definitions:
  dto.AccountResponseDto:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      email:
        type: string
      is_ban:
        type: boolean
      player_id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    required:
    - account_id
    - email
    - is_ban
    - player_id
    - username
    type: object
  dto.ChangePasswordDto:
    properties:
      account_id:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    required:
    - account_id
    - new_password
    - old_password
    type: object
  dto.LoginAccountDto:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginAccountResponseDto:
    properties:
      account_id:
        type: string
      player_id:
        type: string
      token:
        type: string
    required:
    - account_id
    - player_id
    - token
    type: object
  dto.RegisterAccountDto:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.RegisterAccountResponseDto:
    properties:
      account_id:
        type: string
      player_id:
        type: string
      token:
        type: string
    required:
    - account_id
    - player_id
    - token
    type: object
  dto.UpdateAccountDto:
    properties:
      account_id:
        type: string
      email:
        type: string
      username:
        type: string
    required:
    - account_id
    type: object
  dto.UpdateAccountResponseDto:
    properties:
      account_id:
        type: string
      updated_at:
        type: string
    required:
    - account_id
    type: object
info:
  contact:
    email: poomipat002@gmail.com
    name: Poomipat Chuealue
    url: https://github.com/Poomipat-Ch
paths:
  /account:
    put:
      consumes:
      - application/json
      description: 'Update account: username or email'
      parameters:
      - description: Update body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAccountDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateAccountResponseDto'
      security:
      - BearerAuth: []
      summary: Update account
      tags:
      - Account
  /account/{id}:
    get:
      consumes:
      - application/json
      description: Get all information Account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AccountResponseDto'
      security:
      - BearerAuth: []
      summary: Account information by ID
      tags:
      - Account
  /account/password:
    put:
      consumes:
      - application/json
      description: Update password account
      parameters:
      - description: ChangePassword body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ChangePasswordDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateAccountResponseDto'
      security:
      - BearerAuth: []
      summary: Change password account
      tags:
      - Account
  /login:
    post:
      consumes:
      - application/json
      description: Login with Username and Password
      parameters:
      - description: Login body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginAccountDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginAccountResponseDto'
      summary: Login
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Create new user account
      parameters:
      - description: Register body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterAccountDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterAccountResponseDto'
      summary: Register Account
      tags:
      - Authentication
securityDefinitions:
  BearerAuth:
    in: header
    name: X-AUTH-TOKEN
    type: apiKey
swagger: "2.0"
