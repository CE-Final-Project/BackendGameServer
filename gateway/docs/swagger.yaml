basePath: /api/v1
definitions:
  dto.LoginAccount:
    properties:
      password:
        maxLength: 100
        minLength: 8
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginAccountResponse:
    properties:
      account_id:
        type: integer
      player_id:
        type: string
      token:
        type: string
    required:
    - account_id
    - player_id
    - token
    type: object
  dto.RegisterAccount:
    properties:
      email:
        maxLength: 320
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.RegisterAccountResponse:
    properties:
      account_id:
        type: integer
      player_id:
        type: string
      token:
        type: string
    required:
    - account_id
    - player_id
    - token
    type: object
info:
  contact:
    email: poomipat002@gmail.com
    name: Poomipat Chuealue
    url: https://github.com/Poomipat-Ch
  description: API Gateway microservices.
  title: API Gateway Game Server
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with Username and Password
      parameters:
      - description: Login body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginAccountResponse'
      summary: Login
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Create new user account
      parameters:
      - description: Register body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterAccount'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterAccountResponse'
      summary: Register Account
      tags:
      - Authentication
securityDefinitions:
  BearerAuth:
    in: header
    name: X-AUTH-TOKEN
    type: apiKey
swagger: "2.0"
